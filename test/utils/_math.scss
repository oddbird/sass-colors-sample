@use '../../node_modules/sass-true' as *;
@use '../../sass/utils/math';

@include test-module('utils/math') {
  // percent-convert
  @include describe('percent-convert') {
    @include it('Errors when given units other than %') {
      @include assert-equal(
        math.percent-convert(23em, 1),
        'ERROR [math.percent-convert()] Can only percent-convert percentages'
      );
    }

    @include it('Converts a percentage to a decimal') {
      @include assert-equal(
        math.percent-convert(23%, 1),
        0.23
      );
    }

    @include it('Conversion is based on the max value') {
      @include assert-equal(
        math.percent-convert(23%, 2),
        0.46
      );
    }

    @include it('Clamps the result to the max value') {
      @include assert-equal(
        math.percent-convert(120%, 3),
        3
      );
    }
  }

  // to-deg
  @include describe('to-deg') {
    @include it('Errors when given incompatible units') {
      @include assert-equal(
        math.to-deg(23em),
        'ERROR [math.to-deg()] Cannot convert em to degrees'
      );
    }

    @include it('Converts angles to degrees') {
      @include assert-equal(
        math.to-deg(-1.5turn),
        -540deg
      );
    }
  }

  // zero-none
  @include describe('zero-none') {
    @include it('Returns zero if the value is none') {
      @include assert-equal(math.zero-none(none), 0);
    }

    @include it('Returns any other value unchanged') {
      @include assert-equal(math.zero-none(0), 0);
      @include assert-equal(math.zero-none(true), true);
      @include assert-equal(math.zero-none(23em), 23em);
      @include assert-equal(math.zero-none(var(--any)), var(--any));
    }
  }
}
