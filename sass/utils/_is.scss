@use 'string';
@use 'throw';
@use 'sass:list';
@use 'sass:meta';

@function type(
  $value,
  $types,
  $throw-as: null
) {
  $is: meta.type-of($value);
  @if not list.index($types, $is) {
    @if $throw-as {
      @return throw.error(
        'Type should be one of "#{$types}", got "#{$is}"',
        $throw-as
      );
    }

    @return false;
  }

  @return true;
}

@function none($value) { @return $value == 'none'; }

@function special-number($value) {
  $type: meta.type-of($value);

  @if $type == 'calculation' {
    @return true;
  }

  @if ($type != 'string') {
    @return false;
  }

  $specials: (
    'calc(',
    'var(',
    'env(',
    'clamp(',
    'min(',
    'max(',
  );

  $value: string.to-lower-case($value);
  $is: false;

  @each $special in $specials {
    $is: $is or (
      (string.index($value, $special) == 1)
      and
      (string.slice($value, -1) == ')')
    );
  }

  @return $is;
}

@function special-variable($value) {
  @if not type($value, 'string') {
    @return false;
  }

  @return (
    (string.index($value, 'var(') == 1)
    and
    (string.slice($value, -1) == ')')
  );
}
